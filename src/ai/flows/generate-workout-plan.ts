// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Workout plan generator.
 *
 * - generateWorkoutPlan - A function that handles the workout plan generation.
 * - GenerateWorkoutPlanInput - The input type for the workout plan generation.
 * - GenerateWorkoutPlanOutput - The return type for the workout plan generation.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateWorkoutPlanInputSchema = z.object({
  fitnessGoals: z
    .string()
    .describe('The fitness goals of the user, e.g. lose weight, build muscle, improve endurance.'),
  currentFitnessLevel: z
    .string()
    .describe('The current fitness level of the user, e.g. beginner, intermediate, advanced.'),
  availableTime: z
    .string()
    .describe('The amount of time the user has available for workouts per week, e.g. 30 minutes 3 times a week.'),
});
export type GenerateWorkoutPlanInput = z.infer<typeof GenerateWorkoutPlanInputSchema>;

const GenerateWorkoutPlanOutputSchema = z.object({
  workoutPlan: z.string().describe('The personalized workout plan for the user.'),
});
export type GenerateWorkoutPlanOutput = z.infer<typeof GenerateWorkoutPlanOutputSchema>;

export async function generateWorkoutPlan(input: GenerateWorkoutPlanInput): Promise<GenerateWorkoutPlanOutput> {
  return generateWorkoutPlanFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateWorkoutPlanPrompt',
  input: {schema: GenerateWorkoutPlanInputSchema},
  output: {schema: GenerateWorkoutPlanOutputSchema},
  prompt: `You are a personal trainer. Generate a workout plan for the user based on their fitness goals, current fitness level, and available time.

Fitness Goals: {{{fitnessGoals}}}
Current Fitness Level: {{{currentFitnessLevel}}}
Available Time: {{{availableTime}}}

Workout Plan:`, // Keep newlines in prompt.
});

const generateWorkoutPlanFlow = ai.defineFlow(
  {
    name: 'generateWorkoutPlanFlow',
    inputSchema: GenerateWorkoutPlanInputSchema,
    outputSchema: GenerateWorkoutPlanOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
